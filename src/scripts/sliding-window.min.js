/*!
 ████████╗ █████╗ ██████╗  ██████╗ ████████╗
 ╚══██╔══╝██╔══██╗██╔══██╗██╔═══██╗╚══██╔══╝
    ██║   ███████║██████╔╝██║   ██║   ██║   
    ██║   ██╔══██║██╔══██╗██║   ██║   ██║   
    ██║   ██║  ██║██║  ██║╚██████╔╝   ██║   
    ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝    ╚═╝   

   Tarot Carousel v0.1.0 - beta
   A highly customizable carousel with beautiful, physics-driven animations
   Copyright 2025 Magic Spells LLC

   This software is source-available but not open source.
   See LICENSES for usage tiers and commercial terms.

   Licensed under:
      - Magic Spells Non-Commercial License (free for personal use and non-revenue projects)
      - Magic Spells Commercial License (for commercial use by entities under $1M revenue)
      - Magic Spells Enterprise License (for all use by entities with $1M+ revenue)

     Author: Cory Schulz
    Website: https://www.magicspells.io/tarot
       Repo: https://github.com/magic-spells/tarot
     Issues: https://github.com/magic-spells/tarot/issues
   Licenses: https://www.magicspells.io/licenses
*/
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("@magic-spells/tarot")):"function"==typeof define&&define.amd?define(["@magic-spells/tarot"],e):(t="undefined"!=typeof globalThis?globalThis:t||self).SlidingWindowEffect=e(t.Tarot)}(this,(function(t){"use strict";class SlidingWindowEffect extends t.TarotEffect{static effectName="sliding-window";static rules={min_slideWidth:1,max_slideWidth:1/0,min_slidesPerView:1,max_slidesPerView:1,loopBuffer:{left:2,right:2}};constructor(t){super(t);const e=this;e.featherRotation=10,e.featherScale=.9,e.init()}init(){super.init()}reInit(){super.reInit()}render(t,e){const i=this,{slides:s,widths:n,animation:l}=t;i.slideWidth=n.slide,i.paddingLeft=n.paddingLeft,i.gap=n.gap||0,i.doorWidth=(i.slideWidth-i.gap)/2,i.renderSlideWidth(i.slideWidth);for(let t=0,n=s.length;t<n;t++){const n=s[t],l=e.isSlideInRange(n,"CL1","L1");if(l.isInRange){if(l.percent>=.5){i.applyNearLeft0(n,(l.percent-.5)/.5);continue}i.applyNearLeft1(n,l.percent/.5);continue}const d=e.isSlideInRange(n,"CL1","CR1");if(d.isInRange){i.applyCenterSlide(n,d.percent);continue}const r=e.isSlideInRange(n,"CR1","R1");if(r.isInRange){if(r.percent<.5){i.applyNearRight0(n,r.percent/.5);continue}i.applyNearRight1(n,(r.percent-.5)/.5)}else i.applyHiddenState(n)}}applyNearLeft1(t,e){const i=this.paddingLeft,s=this.doorWidth;t.style.transform=`translate3d(${i}px, 0px, 0px)`,t.style.transformOrigin="left bottom",t.style.zIndex=2,t.style.opacity=1,t.style.display="block",t.style.width=`${s}px`}applyNearLeft0(t,e){const i=this.paddingLeft,s=this.doorWidth+(this.slideWidth-this.doorWidth)*e;t.style.transform=`translate3d(${i}px, 0px, 0px)`,t.style.transformOrigin="left bottom",t.style.zIndex=3,t.style.opacity=1,t.style.display="block",t.style.width=`${s}px`}applyNearRight0(t,e){const i=this.slideWidth+(this.doorWidth-this.slideWidth)*e,s=this.paddingLeft+(this.slideWidth-i);t.style.transform=`translate3d(${s}px, 0px, 0px)`,t.style.transformOrigin="right bottom",t.style.zIndex=3,t.style.opacity=1,t.style.display="block",t.style.width=`${i}px`}applyNearRight1(t,e){const i=this.doorWidth,s=this.paddingLeft+(this.slideWidth-i);t.style.transform=`translate3d(${s}px, 0px, 0px)`,t.style.transformOrigin="right bottom",t.style.zIndex=2,t.style.opacity=1,t.style.display="block",t.style.width=`${i}px`}applyCenterSlide(t,e){const i=this.paddingLeft;t.style.transform=`translate3d(${i}px, 0px, 0px)`,t.style.transformOrigin="center center",t.style.zIndex=3,t.style.opacity=1,t.style.display="block",t.style.width=`${this.slideWidth}px`}applyHiddenState(t){t.style.opacity=0,t.style.display="none",t.style.zIndex=0,t.style.transform="translate3d(0px, 0px, 0px)",t.style.transformOrigin="center center",t.style.width=""}destroy(){super.destroy();const t=this.ctx.store.getSlides();for(let e=0;e<t.length;e++){const i=t[e];i&&i.style&&(i.style.transform="",i.style.transformOrigin="",i.style.opacity="",i.style.zIndex="",i.style.display="",i.style.width="")}}}return void 0!==t.Tarot&&t.Tarot.registerEffect(SlidingWindowEffect),SlidingWindowEffect}));
